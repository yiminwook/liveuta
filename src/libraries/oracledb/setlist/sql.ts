import 'server-only';
// SELECT T01.*, T02.EMAIL, COUNT(*) OVER() AS maxCount

export enum SetlistOrder {
  create = 'CREATE_AT',
  broadcast = 'BROADCAST_AT',
}

export const GET_SETLIST = `
  SELECT T01.*
  FROM SETLIST T01
  WHERE VIDEO_ID = :videoId
`;

export const GET_MAX_COUNT = `
  SELECT COUNT(*)
  FROM SETLIST T01
  LEFT JOIN BLACKLIST T03 
    ON T01.CHANNEL_ID = T03.CHANNEL_ID AND T03.MEMBER_EMAIL = :email
  WHERE T03.CHANNEL_ID IS NULL
`;

export const GET_ALL_SETLIST = (orderType: SetlistOrder) => `
  SELECT T01.*
  FROM SETLIST T01
  INNER JOIN MEMBER T02 ON T01.MEMBER_EMAIL = T02.EMAIL
  LEFT JOIN BLACKLIST T03 
    ON T01.CHANNEL_ID = T03.CHANNEL_ID AND T03.MEMBER_EMAIL = :memberEmail
  WHERE T03.CHANNEL_ID IS NULL
  ORDER BY T01.${orderType} DESC    
  OFFSET :startRow ROWS FETCH NEXT :pageSize ROWS ONLY
`;

export const GET_MAX_COUNT_WITH_WHITELIST = `
  SELECT COUNT(*)
  FROM SETLIST T01, MEMBER T02, WHITELIST T03
  WHERE T01.MEMBER_EMAIL = T02.EMAIL
    AND T01.CHANNEL_ID = T03.CHANNEL_ID
    AND T03.MEMBER_EMAIL = :memberEmail
`;

export const GET_ALL_SETLIST_WITH_WHITELIST = (orderType: SetlistOrder) => `
  SELECT T01.*
  FROM SETLIST T01, MEMBER T02, WHITELIST T03
  WHERE T01.MEMBER_EMAIL = T02.EMAIL
    AND T01.CHANNEL_ID = T03.CHANNEL_ID 
    AND T03.MEMBER_EMAIL = :memberEmail
  ORDER BY T01.${orderType} DESC    
  OFFSET :startRow ROWS FETCH NEXT :pageSize ROWS ONLY
`;

export const SEARCH_MAX_COUNT = `
  SELECT COUNT(*)
  FROM SETLIST T01
  LEFT JOIN BLACKLIST T03 
    ON T01.CHANNEL_ID = T03.CHANNEL_ID AND T03.MEMBER_EMAIL = :memberEmail
  WHERE T03.CHANNEL_ID IS NULL 
    AND LOWER(DESCRIPTION) LIKE '%' || :pattern || '%'
`;

export const SEARCH_SETLIST = (orderType: SetlistOrder) => `
  SELECT T01.*
  FROM SETLIST T01
  INNER JOIN MEMBER T02 ON T01.MEMBER_EMAIL = T02.EMAIL
  LEFT JOIN BLACKLIST T03 
    ON T01.CHANNEL_ID = T03.CHANNEL_ID AND T03.MEMBER_EMAIL = :memberEmail
  WHERE T03.CHANNEL_ID IS NULL
    AND LOWER(T01.DESCRIPTION) LIKE '%' || :pattern || '%'
  ORDER BY T01.${orderType} DESC    
  OFFSET :startRow ROWS FETCH NEXT :pageSize ROWS ONLY
`;

export const SEARCH_MAX_COUNT_WITH_WHITELIST = `
  SELECT COUNT(*)
  FROM SETLIST T01, MEMBER T02, WHITELIST T03
  WHERE T01.MEMBER_EMAIL = T02.EMAIL
    AND T01.CHANNEL_ID = T03.CHANNEL_ID
    AND T03.MEMBER_EMAIL = :memberEmail
    AND LOWER(T01.DESCRIPTION) LIKE '%' || :pattern || '%'
`;

export const SEARCH_SETLIST_WITH_WHITELIST = (orderType: SetlistOrder) => `
  SELECT T01.*
  FROM SETLIST T01, MEMBER T02, WHITELIST T03
  WHERE T01.MEMBER_EMAIL = T02.EMAIL
    AND T01.CHANNEL_ID = T03.CHANNEL_ID 
    AND T03.MEMBER_EMAIL = :memberEmail
    AND LOWER(T01.DESCRIPTION) LIKE '%' || :pattern || '%'
  ORDER BY T01.${orderType} DESC    
  OFFSET :startRow ROWS FETCH NEXT :pageSize ROWS ONLY
`;

export const POST_SETLIST = `
  INSERT INTO SETLIST (VIDEO_ID, DESCRIPTION, MEMBER_EMAIL, CHANNEL_ID, BROADCAST_AT, TITLE)
  VALUES (:videoId, :description, :memberEmail, :channelId, :broadcastAt, :title)
`;

export const UPDATE_SETLIST = `
  UPDATE SETLIST
  SET 
    title = :title,
    DESCRIPTION = :description, 
    CHANNEL_ID = :channelId, 
    MEMBER_EMAIL = :memberEmail, 
    UPDATE_AT = CURRENT_TIMESTAMP, 
    BROADCAST_AT = :broadcastAt 
  WHERE VIDEO_ID = :videoId
`;

export const DELETE_SETLIST = `
  DELETE FROM SETLIST
  WHERE VIDEO_ID = :videoId
`;
