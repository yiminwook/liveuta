@use "sass:map";

.wrap {
  position: relative;
}

.form {
  display: grid;
  grid-template-columns: 1fr 2.5rem;
  justify-content: flex-end;

  .inputBox {
    position: relative;

    &:has(.input:not(:placeholder-shown)) .clearButton {
      visibility: visible;
      opacity: 1;
      rotate: 0deg;
      pointer-events: auto;
    }

    .input {
      width: 100%;
      border-radius: 5px 0 0 5px;
      border-right: none;
      transition-property: border-color, width;
      transition-duration: 0.2s;
      transition-timing-function: map.get(var.$easing, default);

      &:focus-visible {
        border-color: util.palette(third, default);
      }

      @include util.min-width(var.$mobile-boundary) {
        width: 12rem;

        &:focus,
        &:not(:placeholder-shown) {
          width: 15rem;
        }

        @media (prefers-reduced-motion: reduce) {
          transition: none;

          &:focus,
          &:not(:placeholder-shown) {
            width: 12rem;
          }
        }
      }
    }

    .clearButton {
      visibility: hidden;
      display: grid;
      justify-content: center;
      align-items: center;
      width: 1.5rem;
      height: 1.5rem;
      border-radius: 0.25rem;
      position: absolute;
      top: 50%;
      right: 0.4rem;
      translate: 0 -50%;
      rotate: -90deg;
      opacity: 0;
      pointer-events: none;
      transition-property: opacity, rotate, visibility;
      transition-duration: 0.3s;
      transition-timing-function: map.get(var.$easing, default);
      transition-behavior: discrete;

      &:hover {
        background-color: map.get(var.$colors, default-hover);
      }

      &:focus-visible {
        box-shadow: 0 0 0 0.125rem util.palette(third, default);
      }
    }
  }

  .submit {
    display: grid;
    place-items: center;
    border-radius: 0 5px 5px 0;
    background-color: util.palette(third, default);
    transition: background-color 0.3s var.$bezier-curve;

    &:hover {
      background-color: util.palette(third, light);
    }

    svg {
      width: 1.75rem;
      height: 1.75rem;
    }
  }
}

.loading {
  z-index: map.get(var.$z-indexes, app);
  position: absolute;
  display: grid;
  place-content: center;
  width: 100%;
  background-color: map.get(var.$colors, body);
  border: 1px solid map.get(var.$colors, default-border);
  border-radius: 5px;
  padding: 0.5rem;
}

.autocomplete {
  z-index: map.get(var.$z-indexes, app);
  position: absolute;
  width: 100%;
  background-color: map.get(var.$colors, body);
  border: 1px solid map.get(var.$colors, default-border);
  border-radius: 5px;

  .autocompleteItem {
    padding: 0.5rem;

    &:not(:last-child) {
      border-block-end: 1px solid map.get(var.$colors, default-border);
    }

    &:hover {
      background-color: map.get(var.$colors, default-hover);
      cursor: pointer;
    }
  }
}